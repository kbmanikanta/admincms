@model CustomerUserSettingsModel
@using Grand.Core.Domain.Customers;



<script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)").click(toggleAvatar);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.UsernamesEnabled)").click(toggleUsername);


            toggleAvatar();
            toggleUsername();
        });

        function toggleAvatar() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)').is(':checked')) {
                $('#pnlDefaultAvatarEnabled').show();
            }
            else {
                $('#pnlDefaultAvatarEnabled').hide();
            }
        }

        function toggleUsername() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.UsernamesEnabled)').is(':checked')) {
                $('#pnlAllowUsersToChangeUsernames').show();
                $('#pnlCheckUsernameAvailability').show();
            }
            else {
                $('#pnlAllowUsersToChangeUsernames').hide();
                $('#pnlCheckUsernameAvailability').hide();
            }
        }

</script>
<div class="form-horizontal">
    <div class="form-body">
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.UsernamesEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.UsernamesEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.UsernamesEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlAllowUsersToChangeUsernames">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.AllowUsersToChangeUsernames, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
            </div>
        </div>
        <div class="form-group" id="pnlCheckUsernameAvailability">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.UserRegistrationType, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandDropDownListFor(model => model.CustomerSettings.UserRegistrationType, ((UserRegistrationType)Model.CustomerSettings.UserRegistrationType).ToSelectList())
                @Html.ValidationMessageFor(model => model.CustomerSettings.UserRegistrationType)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)
            </div>
        </div>
        <div class="form-group" id="pnlDefaultAvatarEnabled">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.DefaultAvatarEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.DefaultAvatarEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.DefaultAvatarEnabled)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.ShowCustomersLocation, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.ShowCustomersLocation)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.ShowCustomersLocation)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.ShowCustomersJoinDate, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.ShowCustomersJoinDate)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.ShowCustomersJoinDate)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.AllowViewingProfiles, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.AllowViewingProfiles)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.AllowViewingProfiles)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.NotifyNewCustomerRegistration, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.HideDownloadableProductsTab, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.HideDownloadableProductsTab)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.HideDownloadableProductsTab)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CustomerNameFormat, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandDropDownListFor(model => model.CustomerSettings.CustomerNameFormat, ((CustomerNameFormat)Model.CustomerSettings.CustomerNameFormat).ToSelectList())
                @Html.ValidationMessageFor(model => model.CustomerSettings.CustomerNameFormat)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.DefaultPasswordFormat, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandDropDownListFor(model => model.CustomerSettings.DefaultPasswordFormat, ((PasswordFormat)Model.CustomerSettings.DefaultPasswordFormat).ToSelectList())
                @Html.ValidationMessageFor(model => model.CustomerSettings.DefaultPasswordFormat)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.PasswordMinLength, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.PasswordMinLength)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordMinLength)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.PasswordLifetime, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.PasswordLifetime)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordLifetime)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.UnduplicatedPasswordsNumber, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.UnduplicatedPasswordsNumber)
                @Html.ValidationMessageFor(model => model.CustomerSettings.UnduplicatedPasswordsNumber)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)
                @Html.ValidationMessageFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)
                <script type="text/javascript">
	                    $(document).ready(function () {
	                        $("#@Html.FieldIdFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)").blur(toggleFailedPasswordAllowedAttempts);
			                    toggleFailedPasswordAllowedAttempts();
		                    });

		                    function toggleFailedPasswordAllowedAttempts() {
		                        var failedPasswordAllowedAttempts = $("#@Html.FieldIdFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)").data("kendoNumericTextBox");
			                    if (failedPasswordAllowedAttempts.value($("#value").val()) > 0) {
				                    $('#pnlFailedPasswordLockoutMinutes').show();
			                    } else {
				                    $('#pnlFailedPasswordLockoutMinutes').hide();
			                    }
		                    }
                </script>
            </div>
        </div>
        <div class="form-group" id="pnlFailedPasswordLockoutMinutes">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.FailedPasswordLockoutMinutes, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.FailedPasswordLockoutMinutes)
                @Html.ValidationMessageFor(model => model.CustomerSettings.FailedPasswordLockoutMinutes)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.HideNewsletterBlock, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.HideNewsletterBlock)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.HideNewsletterBlock)
            </div>
        </div>
        <div class="form-group" id="pnlNewsletterBlockAllowToUnsubscribe">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.NewsletterBlockAllowToUnsubscribe, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.NewsletterBlockAllowToUnsubscribe)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.NewsletterBlockAllowToUnsubscribe)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.RegistrationFreeShipping, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.RegistrationFreeShipping)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.RegistrationFreeShipping)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StoreLastVisitedPage, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StoreLastVisitedPage)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StoreLastVisitedPage)
            </div>
        </div>
    </div>
</div>