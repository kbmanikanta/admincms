@model CustomerUserSettingsModel
@using Grand.Core.Domain.Customers;
<script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthRequired)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)").click(toggleCustomerCountryFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.StateProvinceEnabled)").click(toggleCustomerStateProvinceFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.CompanyEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddressEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddress2Enabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.ZipPostalCodeEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.CityEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.PhoneEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.FaxEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.NewsletterEnabled)").click(toggleNewsletterEnabledField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.HideNewsletterBlock)").click(toggleHideNewsletterBlock);


            toggleCustomerCountryFormField();
            toggleCustomerStateProvinceFormField();
            toggleCustomerRequiredFormField();
            toggleNewsletterEnabledField();
            toggleHideNewsletterBlock();
        });

        function toggleCustomerCountryFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)').is(':checked')) {
                $('#pnlCustomerCountryRequired').show();
                $('#pnlCustomerStateProvinceEnabled').show();
                toggleCustomerStateProvinceFormField();
            } else {
                $('#pnlCustomerCountryRequired').hide();
                $('#pnlCustomerStateProvinceEnabled').hide();
                toggleCustomerStateProvinceFormField();
            }
        }

        function toggleCustomerStateProvinceFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)').is(':checked') &&
                $('#@Html.FieldIdFor(model => model.CustomerSettings.StateProvinceEnabled)').is(':checked')) {
                $('#pnlCustomerStateProvinceRequired').show();
            } else {
                $('#pnlCustomerStateProvinceRequired').hide();
            }
        }

        function toggleCustomerRequiredFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthEnabled)').is(':checked')) {
                $('#pnlCustomerDateOfBirthRequired').show();
            } else {
                $('#pnlCustomerDateOfBirthRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthEnabled)').is(':checked') &&
                $('#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthRequired)').is(':checked')) {
                $('#pnlDateOfBirthMinimumAge').show();
            } else {
                $('#pnlDateOfBirthMinimumAge').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CompanyEnabled)').is(':checked')) {
                $('#pnlCustomerCompanyRequired').show();
            } else {
                $('#pnlCustomerCompanyRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddressEnabled)').is(':checked')) {
                $('#pnlCustomerStreetAddressRequired').show();
            } else {
                $('#pnlCustomerStreetAddressRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddress2Enabled)').is(':checked')) {
                $('#pnlCustomerStreetAddress2Required').show();
            } else {
                $('#pnlCustomerStreetAddress2Required').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.ZipPostalCodeEnabled)').is(':checked')) {
                $('#pnlCustomerZipPostalCodeRequired').show();
            } else {
                $('#pnlCustomerZipPostalCodeRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CityEnabled)').is(':checked')) {
                $('#pnlCustomerCityRequired').show();
            } else {
                $('#pnlCustomerCityRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.PhoneEnabled)').is(':checked')) {
                $('#pnlCustomerPhoneRequired').show();
            } else {
                $('#pnlCustomerPhoneRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.FaxEnabled)').is(':checked')) {
                $('#pnlCustomerFaxRequired').show();
            } else {
                $('#pnlCustomerFaxRequired').hide();
            }
        }

        function toggleNewsletterEnabledField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.NewsletterEnabled)').is(':checked')) {
                $('#pnlCustomerNewsletterTickedByDefault').show();
            } else {
                $('#pnlCustomerNewsletterTickedByDefault').hide();
            }
        }

        function toggleHideNewsletterBlock() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.HideNewsletterBlock)').is(':checked')) {
                $('#pnlNewsletterBlockAllowToUnsubscribe').hide();
            }
            else {
                $('#pnlNewsletterBlockAllowToUnsubscribe').show();
            }
        }

</script>
<div class="form-horizontal">
    <div class="form-body">
        <div class="form-group">
            <div class="note note-info">
                @T("Admin.Configuration.Settings.CustomerUser.CustomerFormFields.Description")
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.GenderEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.GenderEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.GenderEnabled)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.DateOfBirthEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.DateOfBirthEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.DateOfBirthEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerDateOfBirthRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.DateOfBirthRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.DateOfBirthRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.DateOfBirthRequired)
            </div>
        </div>
        <div class="form-group" id="pnlDateOfBirthMinimumAge">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.DateOfBirthMinimumAge, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                @Html.GrandEditorFor(model => model.CustomerSettings.DateOfBirthMinimumAge)
                @Html.ValidationMessageFor(model => model.CustomerSettings.DateOfBirthMinimumAge)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CompanyEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CompanyEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CompanyEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerCompanyRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CompanyRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CompanyRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CompanyRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StreetAddressEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StreetAddressEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddressEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerStreetAddressRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StreetAddressRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StreetAddressRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddressRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StreetAddress2Enabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StreetAddress2Enabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddress2Enabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerStreetAddress2Required">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StreetAddress2Required, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StreetAddress2Required)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddress2Required)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.ZipPostalCodeEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.ZipPostalCodeEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.ZipPostalCodeEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerZipPostalCodeRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.ZipPostalCodeRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.ZipPostalCodeRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.ZipPostalCodeRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CityEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CityEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CityEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerCityRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CityRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CityRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CityRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CountryEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CountryEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CountryEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerCountryRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.CountryRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.CountryRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.CountryRequired)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerStateProvinceEnabled">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StateProvinceEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StateProvinceEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StateProvinceEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerStateProvinceRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.StateProvinceRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.StateProvinceRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.StateProvinceRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.PhoneEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.PhoneEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.PhoneEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerPhoneRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.PhoneRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.PhoneRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.PhoneRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.FaxEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.FaxEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.FaxEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerFaxRequired">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.FaxRequired, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.FaxRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.FaxRequired)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.AcceptPrivacyPolicyEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.AcceptPrivacyPolicyEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.AcceptPrivacyPolicyEnabled)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.NewsletterEnabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.NewsletterEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.NewsletterEnabled)
            </div>
        </div>
        <div class="form-group" id="pnlCustomerNewsletterTickedByDefault">
            <div class="col-md-4 col-sm-4 text-right">
                @Html.GrandLabelFor(model => model.CustomerSettings.NewsletterTickedByDefault, new Dictionary<string, object> { { "class", "control-label" } }, false)
            </div>
            <div class="col-md-8 col-sm-8">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CustomerSettings.NewsletterTickedByDefault)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CustomerSettings.NewsletterTickedByDefault)
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("../CustomerAttribute/ListBlock.cshtml")
