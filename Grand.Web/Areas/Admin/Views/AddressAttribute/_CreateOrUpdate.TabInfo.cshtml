@model AddressAttributeModel

@using Grand.Core.Domain.Catalog








@(Html.LocalizedEditor<AddressAttributeModel, AddressAttributeLocalizedModel>("addressattribute-localized",
    @<div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                @Html.GrandLabelFor(model => model.Locales[item].Name)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.Locales[item].Name)
                    @Html.ValidationMessageFor(model => model.Locales[item].Name)
                </div>
            </div>
            @Html.HiddenFor(model => model.Locales[item].LanguageId)
        </div>
    </div>
    ,
    @<div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                @Html.GrandLabelFor(model => model.Name)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
        </div>
    </div>
    ))
<div class="form-horizontal">
    <div class="form-body">
        <div class="form-group">
            @Html.GrandLabelFor(model => model.IsRequired)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.IsRequired)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.IsRequired)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.AttributeControlTypeId)
            <div class="col-md-9 col-sm-9">
                @{
                    var attributeControlTypes = ((AttributeControlType)Model.AttributeControlTypeId)
                        .ToSelectList(valuesToExclude:
                        //custom address attributes don't support some attribute control types
                        new[] { (int)AttributeControlType.FileUpload, (int)AttributeControlType.Datepicker, (int)AttributeControlType.ColorSquares, (int)AttributeControlType.ImageSquares });
                }
                @Html.GrandDropDownListFor(model => model.AttributeControlTypeId, attributeControlTypes)
                @Html.ValidationMessageFor(model => model.AttributeControlTypeId)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.DisplayOrder)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.DisplayOrder)
                @Html.ValidationMessageFor(model => model.DisplayOrder)
            </div>
        </div>
    </div>
</div>