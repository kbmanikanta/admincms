@model BlogPostModel

@using System.Text;
@using Grand.Services.Blogs





<script type="text/javascript">
        @{
        //TODO move to Model
        var blogTags = EngineContext.Current.Resolve<IBlogService>().GetAllBlogPostTags("", true);
        var blogTagsSb = new StringBuilder();
        blogTagsSb.Append("var initialBlogTags = [");
        for (int i = 0; i < blogTags.Count; i++)
        {
            var tag = blogTags[i];
            blogTagsSb.Append("'");
            blogTagsSb.Append(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(tag.Name));
            blogTagsSb.Append("'");
            if (i != blogTags.Count - 1)
            {
                blogTagsSb.Append(",");
            }
        }
        blogTagsSb.Append("]");
    }

    //tags
    $(document).ready(function () {
        @Html.Raw(blogTagsSb.ToString())
        $("#@Html.FieldIdFor(model => model.Tags)").tagEditor({
            autocomplete: {
                delay: 0,
                position: { collision: 'flip' },
                source: initialBlogTags
            },
            delimiter: ',',
            placeholder: '@T("Admin.ContentManagement.Blog.BlogPosts.Fields.Tags.Placeholder")'
        });
    });
</script>

<div class="form-horizontal">
    <div class="form-body">
        @(Html.LocalizedEditor<BlogPostModel, BlogLocalizedModel>("blogpost-info-localized",
            @<div class="form-horizontal">
                <div class="form-body">
                    <div class="form-group">
                        @Html.GrandLabelFor(model => model.Locales[item].Title)
                        <div class="col-md-9 col-sm-9">
                            @Html.GrandEditorFor(model => model.Locales[item].Title)
                            @Html.ValidationMessageFor(model => model.Locales[item].Title)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.GrandLabelFor(model => model.Locales[item].BodyOverview)
                        <div class="col-md-9 col-sm-9">
                            @Html.GrandTextAreaFor(model => model.Locales[item].BodyOverview, new { style = "Height: 100px;" })
                            @Html.ValidationMessageFor(model => model.Locales[item].BodyOverview)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.GrandLabelFor(model => model.Locales[item].Body)
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(x => x.Locales[item].Body, "RichEditor")
                            @Html.ValidationMessageFor(model => model.Locales[item].Body)
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.Locales[item].LanguageId)
                </div>
            </div>
            ,
            @<div class="form-horizontal">
                <div class="form-body">
                    <div class="form-group">
                        @Html.GrandLabelFor(model => model.Title)
                        <div class="col-md-9 col-sm-9">
                            @Html.GrandEditorFor(model => model.Title)
                            @Html.ValidationMessageFor(model => model.Title)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.GrandLabelFor(model => model.BodyOverview)
                        <div class="col-md-9 col-sm-9">
                            @Html.GrandTextAreaFor(model => model.BodyOverview, new { style = "Height: 100px;" })
                            @Html.ValidationMessageFor(model => model.BodyOverview)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.GrandLabelFor(model => model.Body)
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(x => x.Body, "RichEditor")
                            @Html.ValidationMessageFor(model => model.Body)
                        </div>
                    </div>
                </div>
            </div>
            ))
        <div class="form-group">
            @Html.GrandLabelFor(model => model.PictureId)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.PictureId)
                @Html.ValidationMessageFor(model => model.PictureId)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.AllowComments)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.EditorFor(model => model.AllowComments)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.AllowComments)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.Tags)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.Tags)
                @Html.ValidationMessageFor(model => model.Tags)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.StartDate)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.EndDate)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>
        </div>
    </div>
</div>