@model DiscountModel
@using Grand.Core.Domain.Discounts;
@using Grand.Framework.UI;

<script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.DiscountTypeId)").change(toggleDiscountType);
            $("#@Html.FieldIdFor(model => model.UsePercentage)").click(toggleUsePercentage);
            $("#@Html.FieldIdFor(model => model.RequiresCouponCode)").click(toggleRequiresCouponCode);
            $("#@Html.FieldIdFor(model => model.DiscountLimitationId)").change(toggleLimitation);
            $("#@Html.FieldIdFor(model => model.CalculateByPlugin)").click(toggleCalculate);

            toggleDiscountType();
            toggleLimitation();
            toggleUsePercentage();
            toggleRequiresCouponCode();
            toggleCalculate();
        });

        function toggleCalculate() {
            var selectedCalculateByPlugin = $("#@Html.FieldIdFor(model => model.CalculateByPlugin)").is(':checked');
            if (selectedCalculateByPlugin) {
                $('#pnlUsePercentage').hide();
                $('#pnlDiscountAmount').hide();
                $('#pnlDiscountPercentage').hide();
                $('#pnlMaximumDiscountAmount').hide();
                $('#pnlDiscountPluginName').show();
            }
            else {
                $('#pnlUsePercentage').show();
                $('#pnlDiscountPluginName').hide();
                toggleUsePercentage();
            }
        }


        function toggleDiscountType() {
            var selectedDiscountTypeId = $("#@Html.FieldIdFor(model => model.DiscountTypeId)").val();
            if (selectedDiscountTypeId == @(((int)DiscountType.AssignedToCategories).ToString())) {
            $('#tab-applied-to-categories').show();
            $('#tab-applied-to-manufacturers').hide();
            $('#tab-applied-to-products').hide();
            $('#pnlMaximumDiscountedQuantity').show();
            $('#tab-applied-to-vendors').hide();
            $('#tab-applied-to-stores').hide();
        }
        else if (selectedDiscountTypeId == @(((int)DiscountType.AssignedToManufacturers).ToString())) {
            $('#tab-applied-to-categories').hide();
            $('#tab-applied-to-manufacturers').show();
            $('#tab-applied-to-products').hide();
            $('#pnlMaximumDiscountedQuantity').show();
            $('#tab-applied-to-vendors').hide();
            $('#tab-applied-to-stores').hide();
        }
        else if (selectedDiscountTypeId == @(((int)DiscountType.AssignedToSkus).ToString())) {
            $('#tab-applied-to-categories').hide();
            $('#tab-applied-to-manufacturers').hide();
            $('#tab-applied-to-products').show();
            $('#pnlMaximumDiscountedQuantity').show();
            $('#tab-applied-to-vendors').hide();
            $('#tab-applied-to-stores').hide();
        }
        else if(selectedDiscountTypeId == @(((int)DiscountType.AssignedToVendors).ToString())){
            $('#tab-applied-to-categories').hide();
            $('#tab-applied-to-manufacturers').hide();
            $('#tab-applied-to-products').hide();
            $('#pnlMaximumDiscountedQuantity').show();
            $('#tab-applied-to-vendors').show();
            $('#tab-applied-to-stores').hide();
        }
        else if(selectedDiscountTypeId == @(((int)DiscountType.AssignedToStores).ToString())){
            $('#tab-applied-to-categories').hide();
            $('#tab-applied-to-manufacturers').hide();
            $('#tab-applied-to-products').hide();
            $('#pnlMaximumDiscountedQuantity').show();
            $('#tab-applied-to-vendors').hide();
            $('#tab-applied-to-stores').show();
        }
        else {
            $('#tab-applied-to-categories').hide();
            $('#tab-applied-to-manufacturers').hide();
            $('#tab-applied-to-products').hide();
            $('#pnlMaximumDiscountedQuantity').hide();
            $('#tab-applied-to-vendors').hide();
            $('#tab-applied-to-stores').hide();
            }
        }

        function toggleLimitation() {
            var selectedDiscountLimitationId = $("#@Html.FieldIdFor(model => model.DiscountLimitationId)").val();
            if (selectedDiscountLimitationId == @(((int)DiscountLimitationType.NTimesOnly).ToString()) || selectedDiscountLimitationId == @(((int)DiscountLimitationType.NTimesPerCustomer).ToString())) {
                //'N Times Only' or 'N Times Per Customer'
                $('#pnlLimitationTimes').show();
        }
        else {
                $('#pnlLimitationTimes').hide();
        }
        }

        function toggleUsePercentage() {
            if ($('#@Html.FieldIdFor(model => model.UsePercentage)').is(':checked')) {
                $('#pnlDiscountPercentage').show();
                $('#pnlDiscountAmount').hide();
                $('#pnlMaximumDiscountAmount').show();
            } else {
                $('#pnlDiscountPercentage').hide();
                $('#pnlDiscountAmount').show();
                $('#pnlMaximumDiscountAmount').hide();
            }
        }

        function toggleRequiresCouponCode() {
            if ($('#@Html.FieldIdFor(model => model.RequiresCouponCode)').is(':checked')) {
                $('#tab-couponcode').show();
                $('#pnlReused').show();
            } else {
                $('#tab-couponcode').hide();
                $('#pnlReused').hide();
            }
        }
</script>
<div class="form-horizontal">
    <div class="form-body">
        <div class="form-group">
            @Html.GrandLabelFor(model => model.Name)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.DiscountTypeId)
            <div class="col-md-9 col-sm-9">
                @Html.GrandDropDownListFor(model => model.DiscountTypeId, ((DiscountType)Model.DiscountTypeId).ToSelectList())
                @Html.ValidationMessageFor(model => model.DiscountTypeId)
            </div>
        </div>
        <div class="form-group" id="pnlUsePercentage">
            @Html.GrandLabelFor(model => model.UsePercentage)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.UsePercentage)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.UsePercentage)
            </div>
        </div>
        <div class="form-group" id="pnlDiscountAmount">
            @Html.GrandLabelFor(model => model.DiscountAmount)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.DiscountAmount) [@Model.PrimaryStoreCurrencyCode]
                @Html.ValidationMessageFor(model => model.DiscountAmount)
            </div>
        </div>
        <div class="form-group" id="pnlDiscountPercentage">
            @Html.GrandLabelFor(model => model.DiscountPercentage)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.DiscountPercentage)
                @Html.ValidationMessageFor(model => model.DiscountPercentage)
            </div>
        </div>
        <div class="form-group" id="pnlMaximumDiscountAmount">
            @Html.GrandLabelFor(model => model.MaximumDiscountAmount)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.MaximumDiscountAmount) [@Model.PrimaryStoreCurrencyCode]
                @Html.ValidationMessageFor(model => model.MaximumDiscountAmount)
            </div>
        </div>
        <div class="form-group" id="pnlCalculateByPlugin">
            @Html.GrandLabelFor(model => model.CalculateByPlugin)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.CalculateByPlugin)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.CalculateByPlugin)
            </div>
        </div>
        <div class="form-group" id="pnlDiscountPluginName">
            @Html.GrandLabelFor(model => model.DiscountPluginName)
            <div class="col-md-9 col-sm-9">
                @Html.GrandDropDownListFor(model => model.DiscountPluginName, Model.AvailableDiscountAmountProviders)
                @Html.ValidationMessageFor(model => model.DiscountPluginName)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.StartDateUtc)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.StartDateUtc)
                @Html.ValidationMessageFor(model => model.StartDateUtc)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.EndDateUtc)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.EndDateUtc)
                @Html.ValidationMessageFor(model => model.EndDateUtc)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.RequiresCouponCode)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.RequiresCouponCode)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.RequiresCouponCode)
            </div>
        </div>
        <div class="form-group" id="pnlReused">
            @Html.GrandLabelFor(model => model.Reused)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.Reused)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.Reused)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.IsCumulative)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.IsCumulative)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.IsCumulative)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.DiscountLimitationId)
            <div class="col-md-9 col-sm-9">
                @Html.GrandDropDownListFor(model => model.DiscountLimitationId, ((DiscountLimitationType)Model.DiscountLimitationId).ToSelectList())
                @Html.ValidationMessageFor(model => model.DiscountLimitationId)
            </div>
        </div>
        <div class="form-group" id="pnlLimitationTimes">
            @Html.GrandLabelFor(model => model.LimitationTimes)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.LimitationTimes)
                @Html.ValidationMessageFor(model => model.LimitationTimes) @T("Admin.Promotions.Discounts.Fields.LimitationTimes.Times")
            </div>
        </div>
        <div class="form-group" id="pnlMaximumDiscountedQuantity">
            @Html.GrandLabelFor(model => model.MaximumDiscountedQuantity)
            <div class="col-md-9 col-sm-9">
                @Html.EditorFor(model => model.MaximumDiscountedQuantity)
                @Html.ValidationMessageFor(model => model.MaximumDiscountedQuantity)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.IsEnabled)
            <div class="col-md-9 col-sm-9">
                <label class="mt-checkbox mt-checkbox-outline">
                    @Html.GrandEditorFor(model => model.IsEnabled)
                    <span></span>
                </label>
                @Html.ValidationMessageFor(model => model.IsEnabled)
            </div>
        </div>
    </div>
</div>