@model CategoryModel

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function() {
        $('#category-edit').show();
        $("#category-edit").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>

<div id="category-edit" style="display:none">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.Common.SEO")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Products")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Discounts")
        </li>
        <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Acl")
        </li>
        <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Stores")
        </li>
        <li @Html.RenderSelectedTabIndex(6, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.ActivityLog")
        </li>

    </ul>
    <div>
        @Html.Partial("_CreateOrUpdate.TabInfo", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabSeo", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabProducts", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabDiscounts", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabAcl", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabStores", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabActivityLog", Model)
    </div>

</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "category-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}


@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">