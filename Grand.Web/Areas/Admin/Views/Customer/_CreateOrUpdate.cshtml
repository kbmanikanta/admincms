@model CustomerModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@{
    //resources for product tags input
    Html.AppendCssFileParts("~/Content/tagEditor/jquery.tag-editor.css", excludeFromBundle: true);
    Html.AppendScriptParts("~/Scripts/tagEditor/jquery.tag-editor.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/Scripts/tagEditor/jquery.caret.min.js", excludeFromBundle: true);
}
<script>
    $(document).ready(function() {
        var tabPos = 'left';
        if (window.devicePixelRatio == 2)
            tabPos = 'top';

        $('#customer-edit').show();
        $("#customer-edit").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            },
            tabPosition: tabPos,
            select: tabstrip_on_tab_select
        });
    });



    //tags
    $(document).ready(function () {
        $("#@Html.FieldIdFor(model => model.CustomerTags)").tagEditor({
            autocomplete: {
                delay: 0,
                position: { collision: 'flip' },
                source: '/Admin/CustomerTag/Search',
                minLength: 3,
                //source: initialProductTags
            },
            delimiter: ',',
            placeholder: 'Enter tags ...'
        });
    });


</script>
<div id="customer-edit" style="display:none">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Customers.Customers.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.Customers.Customers.CustomerRoles")
        </li>
        @if (!String.IsNullOrEmpty(Model.Id))
        {
            <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.Orders")
            </li>
            <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.Addresses")
            </li>
            <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.CurrentShoppingCart")
            </li>
            <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.CurrentWishlist")
            </li>
            <li @Html.RenderSelectedTabIndex(6, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.ProductPrice")
            </li>
            <li @Html.RenderSelectedTabIndex(7, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.ActivityLog")
            </li>
            <li @Html.RenderSelectedTabIndex(8, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.Impersonate")
            </li>
            <li @Html.RenderSelectedTabIndex(9, GetSelectedTabIndex())>
                @T("Admin.Customers.Customers.BackInStockSubscriptions")
            </li>
        }
        @if (Model.DisplayRewardPointsHistory)
        {
            <li>
                @T("Admin.Customers.Customers.RewardPoints")
            </li>
        }
    </ul>
    <div>
        @Html.Partial("_CreateOrUpdate.TabInfo", Model)
    </div>
    <div>
        @Html.Partial("_CreateOrUpdate.TabCustomerRoles", Model)
    </div>
    @if (!String.IsNullOrEmpty(Model.Id))
    {
        <div>
            @Html.Partial("_CreateOrUpdate.TabOrders", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabAddresses", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabCurrentShoppingCart", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabCurrentWishlist", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabProductPrice", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabActivityLog", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabImpersonate", Model)
        </div>
        <div>
            @Html.Partial("_CreateOrUpdate.TabBackInStockSubscriptions", Model)
        </div>
    }
    @if (Model.DisplayRewardPointsHistory)
    {
        <div>
            @Html.Partial("_CreateOrUpdate.TabRewardPoints", Model)
        </div>
    }
</div>
@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "customer-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}
@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">