@model FeedGoogleShoppingModel
@using Grand.Core.Infrastructure
@using Grand.Plugin.Feed.GoogleShopping.Models;
@using Grand.Framework;
@using Grand.Framework.UI;

@{
    <div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                <ul>
                    <li>
                        At least two unique product identifiers are required. So each of your product should
                        have manufacturer (brand) and MPN (manufacturer part number) specified
                    </li>
                    <li>Specify default tax values in your Google Merchant Center account settings</li>
                    <li>Specify default shipping values in your Google Merchant Center account settings</li>
                    <li>
                        In order to get more info about required fields look at the following article <a href="http://www.google.com/support/merchants/bin/answer.py?answer=188494" target="_blank">http://www.google.com/support/merchants/bin/answer.py?answer=188494</a>
                    </li>
                </ul>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.ProductPictureSize, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.ProductPictureSize)
                    @Html.ValidationMessageFor(model => model.ProductPictureSize)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.PassShippingInfoWeight, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.PassShippingInfoWeight)
                    @Html.ValidationMessageFor(model => model.PassShippingInfoWeight)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.PassShippingInfoDimensions, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.PassShippingInfoDimensions)
                    @Html.ValidationMessageFor(model => model.PassShippingInfoDimensions)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.PricesConsiderPromotions, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.PricesConsiderPromotions)
                    @Html.ValidationMessageFor(model => model.PricesConsiderPromotions)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.StoreId, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandDropDownListFor(model => model.StoreId, Model.AvailableStores)
                    @Html.ValidationMessageFor(model => model.StoreId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.CurrencyId, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandDropDownListFor(model => model.CurrencyId, Model.AvailableCurrencies)
                    @Html.ValidationMessageFor(model => model.CurrencyId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 text-right">
                    @Html.GrandLabelFor(model => model.DefaultGoogleCategory, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandDropDownListFor(model => model.DefaultGoogleCategory, Model.AvailableGoogleCategories)
                    @Html.ValidationMessageFor(model => model.DefaultGoogleCategory)
                </div>
            </div>
            @if (Model.GeneratedFiles.Count > 0)
            {
                <div class="form-group">
                    <div class="col-md-3 text-right">
                        @Html.GrandLabelFor(m => m.GeneratedFiles, new Dictionary<string, object> { { "class", "control-label" } }, false)
                    </div>
                    <div class="col-md-9 col-sm-9">
                        <label class="control-label">
                            @for (int i = 0; i <= Model.GeneratedFiles.Count - 1; i++)
                            {
                                var generatedFile = Model.GeneratedFiles[i];
                                @generatedFile.StoreName <text>-</text> <a href="@generatedFile.FileUrl" target="_blank">@generatedFile.FileUrl</a>
                                if (i != Model.GeneratedFiles.Count - 1)
                                {
                                    <br />
                                }
                            }
                        </label>
                    </div>
                </div>
            }
        </div>
        <div class="form-actions">
            <div class="col-md-offset-3 col-sm-offset-3 col-md-9 col-sm-9">
                <input type="submit" name="save" class="btn green" value="@T("Admin.Common.Save")" />
                <input type="submit" name="generate" class="btn default" value="@T("Plugins.Feed.GoogleShopping.Generate")" />
            </div>
        </div>
    </div>
}